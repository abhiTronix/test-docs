{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction VidGear is a powerful python Video Processing library built with multi-threaded Gears each with a unique set of trailblazing features. These APIs provides a easy-to-use, highly extensible, and multi-threaded wrapper around many underlying state-of-the-art libraries such as OpenCV \u27b6 , FFmpeg \u27b6 , starlette \u27b6 , picamera \u27b6 , pafy \u27b6 , pyzmq \u27b6 and python-mss \u27b6 . TL;DR: VidGear is an ultrafast, compact, flexible and easy-to-adapt complete Video Processing Python Library. Quickstart Requirements: Python 3.6+ Install using pip : $ pip install vidgear Gears, What are these? VidGear is built with ultrafast \u27b6 multi-threaded Gears each with some unique purpose. Each Gear is designed exclusively to handle/control different device & application specific video streams, network streams, and media encoders. These Gear APIs provides an easy-to-use, highly extensible, and a multi-threaded wrapper around many underlying various python libraries to exploit their features and functions directly while providing robust error-handling. These Gears can be classified as follows: A. VideoCapture Gears: CamGear: Targets various IP-USB-Cameras/Network-Streams/YouTube-Video-URL. PiGear: Targets various Raspberry Pi Camera Modules. ScreenGear: Enables ultra-fast Screen Casting. VideoGear: A common API with Video Stabilizer wrapper. B. VideoWriter Gear: WriteGear: Handles easy Lossless Video Encoding and Compression. C. Network Gears: NetGear: Targets synchronous video frames transferring between interconnecting systems over the network. WebGear: A powerful ASGI Video Server that transfers live video frames to any web browser on the network. Need Help? FAQ & Troubleshooting Contribution Guidelines Gitter Community channel Reporting Issue","title":"Introduction"},{"location":"#introduction","text":"VidGear is a powerful python Video Processing library built with multi-threaded Gears each with a unique set of trailblazing features. These APIs provides a easy-to-use, highly extensible, and multi-threaded wrapper around many underlying state-of-the-art libraries such as OpenCV \u27b6 , FFmpeg \u27b6 , starlette \u27b6 , picamera \u27b6 , pafy \u27b6 , pyzmq \u27b6 and python-mss \u27b6 . TL;DR: VidGear is an ultrafast, compact, flexible and easy-to-adapt complete Video Processing Python Library.","title":"Introduction"},{"location":"#quickstart","text":"Requirements: Python 3.6+ Install using pip : $ pip install vidgear","title":"Quickstart"},{"location":"#gears-what-are-these","text":"VidGear is built with ultrafast \u27b6 multi-threaded Gears each with some unique purpose. Each Gear is designed exclusively to handle/control different device & application specific video streams, network streams, and media encoders. These Gear APIs provides an easy-to-use, highly extensible, and a multi-threaded wrapper around many underlying various python libraries to exploit their features and functions directly while providing robust error-handling. These Gears can be classified as follows: A. VideoCapture Gears: CamGear: Targets various IP-USB-Cameras/Network-Streams/YouTube-Video-URL. PiGear: Targets various Raspberry Pi Camera Modules. ScreenGear: Enables ultra-fast Screen Casting. VideoGear: A common API with Video Stabilizer wrapper. B. VideoWriter Gear: WriteGear: Handles easy Lossless Video Encoding and Compression. C. Network Gears: NetGear: Targets synchronous video frames transferring between interconnecting systems over the network. WebGear: A powerful ASGI Video Server that transfers live video frames to any web browser on the network.","title":"Gears, What are these?"},{"location":"#need-help","text":"FAQ & Troubleshooting Contribution Guidelines Gitter Community channel Reporting Issue","title":"Need Help?"}]}